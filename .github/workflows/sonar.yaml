#name: SonarQube Scan
#
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#
#jobs:
#  sonar:
#    name: Run SonarQube scan with Maven
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: 17
#        distribution: 'zulu'
#
#    - name: Cache SonarQube dependencies
#      uses: actions/cache@v2
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-
#
#    - name: Build with Maven
#      run: mvn clean install -DskipTests
#
#    - name: Run SonarQube Scanner
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      run: mvn sonar:sonar -Dsonar.projectKey=test-sonar -Dsonar.host.url=https://30e3-14-231-181-143.ngrok-free.app -Dsonar.login=$SONAR_TOKEN

name: SonarQube Analysis

on:
  push:
    branches:
      - master  # Chạy SonarQube khi có push vào nhánh main

jobs:
  sonar:
    name: Run SonarQube Scan
    runs-on: ubuntu-latest  # Chạy trên môi trường Ubuntu

    steps:
      # 1. Kiểm tra mã nguồn
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Cài đặt Java (nếu bạn sử dụng Java/Maven)
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adoptopenjdk'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # 3. Clean SonarQube cache trước khi thực hiện phân tích
      - name: Clean SonarQube cache
        run: rm -rf ~/.sonar

      # 4. Cài đặt và cấu hình Maven (nếu cần)
#      - name: Set up Maven
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'maven'  # Cài Maven và cache lại để tăng hiệu suất

      # 5. Build dự án với Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests -U  # Cờ -U để cập nhật các phụ thuộc

      # 6. Chạy phân tích SonarQube với plugin Maven
      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Đặt SonarQube token làm biến môi trường
        run: mvn sonar:sonar -Dsonar.projectKey=test-sonar -Dsonar.host.url=https://30e3-14-231-181-143.ngrok-free.app -Dsonar.login=$SONAR_TOKEN -X  # Chạy với chế độ debug để có thêm thông tin chi tiết
